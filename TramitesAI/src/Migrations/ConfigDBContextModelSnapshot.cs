// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TramitesAI.src.Repository.Configuration;

#nullable disable

namespace TramitesAI.Migrations
{
    [DbContext(typeof(ConfigDBContext))]
    partial class ConfigDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TramitesAI.src.Repository.Domain.Entidades.Archivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Obligatorio")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Archivos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Denuncia Policial",
                            Obligatorio = false
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Carga Presupuestos",
                            Obligatorio = false
                        });
                });

            modelBuilder.Entity("TramitesAI.src.Repository.Domain.Entidades.Dato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Datos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Marca"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Modelo"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Año"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Cod_Post"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Numero_siniestro"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Tipo_inmueble"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Direccion"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "cod_Post"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Superficie"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Rejas"
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "fecha_siniestro"
                        },
                        new
                        {
                            Id = 12,
                            Nombre = "Denunciante"
                        },
                        new
                        {
                            Id = 13,
                            Nombre = "Motivo"
                        },
                        new
                        {
                            Id = 14,
                            Nombre = "Ubicación"
                        },
                        new
                        {
                            Id = 15,
                            Nombre = "Comentarios"
                        },
                        new
                        {
                            Id = 16,
                            Nombre = "fecha_presupuesto"
                        },
                        new
                        {
                            Id = 17,
                            Nombre = "Total_presupuesto"
                        },
                        new
                        {
                            Id = 18,
                            Nombre = "items_presupuesto"
                        },
                        new
                        {
                            Id = 19,
                            Nombre = "Comentarios"
                        });
                });

            modelBuilder.Entity("TramitesAI.src.Repository.Domain.Entidades.Respuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MensajeRespuesta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Respuestas");
                });

            modelBuilder.Entity("TramitesAI.src.Repository.Domain.Entidades.Solicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MensajeSolicitud")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Solicitudes");
                });

            modelBuilder.Entity("TramitesAI.src.Repository.Domain.Entidades.SolicitudProcesada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Canal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Creado")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modificado")
                        .HasColumnType("datetime2");

                    b.Property<string>("MsgId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RespuestaId")
                        .HasColumnType("int");

                    b.Property<int>("SolicitudId")
                        .HasColumnType("int");

                    b.Property<int?>("TramiteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RespuestaId");

                    b.HasIndex("SolicitudId");

                    b.ToTable("SolicitudesProcesadas");
                });

            modelBuilder.Entity("TramitesAI.src.Repository.Domain.Entidades.Tramite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tramites");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Denuncia Siniestro"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Cotizar Poliza Auto"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Carga Presupuestos"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Cotizar Poliza Hogar"
                        });
                });

            modelBuilder.Entity("TramitesAI.src.Repository.Domain.Entidades.TramiteArchivo", b =>
                {
                    b.Property<int>("TramiteId")
                        .HasColumnType("int");

                    b.Property<int>("ArchivoId")
                        .HasColumnType("int");

                    b.HasKey("TramiteId", "ArchivoId");

                    b.HasIndex("ArchivoId");

                    b.ToTable("TramiteArchivos");

                    b.HasData(
                        new
                        {
                            TramiteId = 1,
                            ArchivoId = 1
                        },
                        new
                        {
                            TramiteId = 3,
                            ArchivoId = 2
                        });
                });

            modelBuilder.Entity("TramitesAI.src.Repository.Domain.Entidades.TramiteDato", b =>
                {
                    b.Property<int>("TramiteId")
                        .HasColumnType("int");

                    b.Property<int>("DatoId")
                        .HasColumnType("int");

                    b.HasKey("TramiteId", "DatoId");

                    b.HasIndex("DatoId");

                    b.ToTable("TramiteDatos");

                    b.HasData(
                        new
                        {
                            TramiteId = 2,
                            DatoId = 1
                        },
                        new
                        {
                            TramiteId = 2,
                            DatoId = 2
                        },
                        new
                        {
                            TramiteId = 2,
                            DatoId = 3
                        },
                        new
                        {
                            TramiteId = 2,
                            DatoId = 4
                        },
                        new
                        {
                            TramiteId = 4,
                            DatoId = 6
                        },
                        new
                        {
                            TramiteId = 4,
                            DatoId = 7
                        },
                        new
                        {
                            TramiteId = 4,
                            DatoId = 8
                        },
                        new
                        {
                            TramiteId = 4,
                            DatoId = 9
                        },
                        new
                        {
                            TramiteId = 4,
                            DatoId = 10
                        },
                        new
                        {
                            TramiteId = 1,
                            DatoId = 11
                        },
                        new
                        {
                            TramiteId = 1,
                            DatoId = 12
                        },
                        new
                        {
                            TramiteId = 1,
                            DatoId = 13
                        },
                        new
                        {
                            TramiteId = 1,
                            DatoId = 14
                        },
                        new
                        {
                            TramiteId = 1,
                            DatoId = 15
                        },
                        new
                        {
                            TramiteId = 3,
                            DatoId = 16
                        },
                        new
                        {
                            TramiteId = 3,
                            DatoId = 17
                        },
                        new
                        {
                            TramiteId = 3,
                            DatoId = 18
                        },
                        new
                        {
                            TramiteId = 3,
                            DatoId = 19
                        },
                        new
                        {
                            TramiteId = 3,
                            DatoId = 5
                        });
                });

            modelBuilder.Entity("TramitesAI.src.Repository.Domain.Entidades.SolicitudProcesada", b =>
                {
                    b.HasOne("TramitesAI.src.Repository.Domain.Entidades.Respuesta", "Respuesta")
                        .WithMany()
                        .HasForeignKey("RespuestaId");

                    b.HasOne("TramitesAI.src.Repository.Domain.Entidades.Solicitud", "Solicitud")
                        .WithMany()
                        .HasForeignKey("SolicitudId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Respuesta");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("TramitesAI.src.Repository.Domain.Entidades.TramiteArchivo", b =>
                {
                    b.HasOne("TramitesAI.src.Repository.Domain.Entidades.Archivo", "Archivo")
                        .WithMany("TramiteArchivos")
                        .HasForeignKey("ArchivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TramitesAI.src.Repository.Domain.Entidades.Tramite", "Tramite")
                        .WithMany("TramiteArchivos")
                        .HasForeignKey("TramiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Archivo");

                    b.Navigation("Tramite");
                });

            modelBuilder.Entity("TramitesAI.src.Repository.Domain.Entidades.TramiteDato", b =>
                {
                    b.HasOne("TramitesAI.src.Repository.Domain.Entidades.Dato", "Dato")
                        .WithMany("TramiteDatos")
                        .HasForeignKey("DatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TramitesAI.src.Repository.Domain.Entidades.Tramite", "Tramite")
                        .WithMany("TramiteDatos")
                        .HasForeignKey("TramiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dato");

                    b.Navigation("Tramite");
                });

            modelBuilder.Entity("TramitesAI.src.Repository.Domain.Entidades.Archivo", b =>
                {
                    b.Navigation("TramiteArchivos");
                });

            modelBuilder.Entity("TramitesAI.src.Repository.Domain.Entidades.Dato", b =>
                {
                    b.Navigation("TramiteDatos");
                });

            modelBuilder.Entity("TramitesAI.src.Repository.Domain.Entidades.Tramite", b =>
                {
                    b.Navigation("TramiteArchivos");

                    b.Navigation("TramiteDatos");
                });
#pragma warning restore 612, 618
        }
    }
}
