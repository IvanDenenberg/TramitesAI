// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TramitesAI.src.Repository.Configuration;

#nullable disable

namespace TramitesAI.Migrations
{
    [DbContext(typeof(ConfigDBContext))]
    partial class ConfigDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TramitesAI.Repository.Domain.Dto.Archivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Obligatorio")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Archivos");
                });

            modelBuilder.Entity("TramitesAI.Repository.Domain.Dto.Dato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Datos");
                });

            modelBuilder.Entity("TramitesAI.Repository.Domain.Dto.Respuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MensajeRespuesta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Respuestas");
                });

            modelBuilder.Entity("TramitesAI.Repository.Domain.Dto.Solicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MensajeSolicitud")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Solicitudes");
                });

            modelBuilder.Entity("TramitesAI.Repository.Domain.Dto.SolicitudProcesada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Canal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Creado")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modificado")
                        .HasColumnType("datetime2");

                    b.Property<string>("MsgId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RespuestaId")
                        .HasColumnType("int");

                    b.Property<int>("SolicitudId")
                        .HasColumnType("int");

                    b.Property<int?>("TramiteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RespuestaId");

                    b.HasIndex("SolicitudId");

                    b.ToTable("SolicitudesProcesadas");
                });

            modelBuilder.Entity("TramitesAI.Repository.Domain.Dto.Tramite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tramites");
                });

            modelBuilder.Entity("TramitesAI.Repository.Domain.Dto.TramiteArchivo", b =>
                {
                    b.Property<int>("TramiteId")
                        .HasColumnType("int");

                    b.Property<int>("ArchivoId")
                        .HasColumnType("int");

                    b.HasKey("TramiteId", "ArchivoId");

                    b.HasIndex("ArchivoId");

                    b.ToTable("TramiteArchivos");
                });

            modelBuilder.Entity("TramitesAI.Repository.Domain.Dto.TramiteDato", b =>
                {
                    b.Property<int>("TramiteId")
                        .HasColumnType("int");

                    b.Property<int>("DatoId")
                        .HasColumnType("int");

                    b.HasKey("TramiteId", "DatoId");

                    b.HasIndex("DatoId");

                    b.ToTable("TramiteDatos");
                });

            modelBuilder.Entity("TramitesAI.Repository.Domain.Dto.SolicitudProcesada", b =>
                {
                    b.HasOne("TramitesAI.Repository.Domain.Dto.Respuesta", "Respuesta")
                        .WithMany()
                        .HasForeignKey("RespuestaId");

                    b.HasOne("TramitesAI.Repository.Domain.Dto.Solicitud", "Solicitud")
                        .WithMany()
                        .HasForeignKey("SolicitudId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Respuesta");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("TramitesAI.Repository.Domain.Dto.TramiteArchivo", b =>
                {
                    b.HasOne("TramitesAI.Repository.Domain.Dto.Archivo", "Archivo")
                        .WithMany("TramiteArchivos")
                        .HasForeignKey("ArchivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TramitesAI.Repository.Domain.Dto.Tramite", "Tramite")
                        .WithMany("TramiteArchivos")
                        .HasForeignKey("TramiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Archivo");

                    b.Navigation("Tramite");
                });

            modelBuilder.Entity("TramitesAI.Repository.Domain.Dto.TramiteDato", b =>
                {
                    b.HasOne("TramitesAI.Repository.Domain.Dto.Dato", "Dato")
                        .WithMany("TramiteDatos")
                        .HasForeignKey("DatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TramitesAI.Repository.Domain.Dto.Tramite", "Tramite")
                        .WithMany("TramiteDatos")
                        .HasForeignKey("TramiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dato");

                    b.Navigation("Tramite");
                });

            modelBuilder.Entity("TramitesAI.Repository.Domain.Dto.Archivo", b =>
                {
                    b.Navigation("TramiteArchivos");
                });

            modelBuilder.Entity("TramitesAI.Repository.Domain.Dto.Dato", b =>
                {
                    b.Navigation("TramiteDatos");
                });

            modelBuilder.Entity("TramitesAI.Repository.Domain.Dto.Tramite", b =>
                {
                    b.Navigation("TramiteArchivos");

                    b.Navigation("TramiteDatos");
                });
#pragma warning restore 612, 618
        }
    }
}
